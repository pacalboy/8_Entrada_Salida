package alvaro.simulacro;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ALvaro Jiménez
 */
public class UnionFicheros extends javax.swing.JFrame {

    private File f1;
    private File f2;
    private File d;
    private File copia;
    private BufferedReader br;
    private PrintWriter pw;
    
    private UnionFicheros() {
        initComponents();
    }
    
    private boolean comprobarExiste(File f){
        if (!f.exists()) {
            JOptionPane.showMessageDialog(this, f + " no existe");
            return false;
        }
        return true;
    }
    
    private void copiarArchivo(File origen, File destino){
        String text;
        try {
            br = new BufferedReader(new FileReader(origen));
            pw = new PrintWriter(new FileWriter(destino, true));
            text = br.readLine();
            while (text != null) {
                pw.println(text);
                text = br.readLine();
            }
            br.close();
            pw.close();
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "No se encuentra el fichero origen");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Problema con el fichero destino");
        }
            
    }
    
    private void reiniciarEstado(){
        tFile1.setText("");
        tFile2.setText("");
        tDirectorio.setText("");
        bCopiar.setEnabled(false);
        bComprobar.setEnabled(true);
        tFile1.setEnabled(true);
        tFile2.setEnabled(true);
        tDirectorio.setEnabled(true);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pFondo = new javax.swing.JPanel();
        bComprobar = new javax.swing.JButton();
        bBorrar = new javax.swing.JButton();
        bCopiar = new javax.swing.JButton();
        tFile1 = new javax.swing.JTextField();
        tFile2 = new javax.swing.JTextField();
        tDirectorio = new javax.swing.JTextField();
        lFile1 = new javax.swing.JLabel();
        lFile2 = new javax.swing.JLabel();
        lDirectorio = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Unir archivos de texto");

        bComprobar.setText("COMPROBAR");
        bComprobar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bComprobarActionPerformed(evt);
            }
        });

        bBorrar.setText("BORRAR");
        bBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBorrarActionPerformed(evt);
            }
        });

        bCopiar.setText("COPIAR");
        bCopiar.setEnabled(false);
        bCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCopiarActionPerformed(evt);
            }
        });

        lFile1.setText("Archivo 1");

        lFile2.setText("Archivo 2");

        lDirectorio.setText("Directorio");

        javax.swing.GroupLayout pFondoLayout = new javax.swing.GroupLayout(pFondo);
        pFondo.setLayout(pFondoLayout);
        pFondoLayout.setHorizontalGroup(
            pFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pFondoLayout.createSequentialGroup()
                .addGroup(pFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pFondoLayout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(bBorrar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pFondoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lFile2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lFile1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lDirectorio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tDirectorio, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                    .addGroup(pFondoLayout.createSequentialGroup()
                        .addComponent(bComprobar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bCopiar))
                    .addComponent(tFile1)
                    .addComponent(tFile2))
                .addGap(52, 52, 52))
        );
        pFondoLayout.setVerticalGroup(
            pFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pFondoLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(pFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tFile1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lFile1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tFile2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lFile2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tDirectorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lDirectorio))
                .addGap(39, 39, 39)
                .addGroup(pFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bComprobar)
                    .addComponent(bBorrar)
                    .addComponent(bCopiar))
                .addContainerGap(135, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBorrarActionPerformed
        reiniciarEstado();
    }//GEN-LAST:event_bBorrarActionPerformed

    private void bComprobarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bComprobarActionPerformed
        if (tFile1.getText().isEmpty() || tFile2.getText().isEmpty() || tDirectorio.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campo requerido vacío");
        }else{
            f1 = new File(tFile1.getText());
            f2 = new File(tFile2.getText());
            d = new File(tDirectorio.getText());
        }
        
        if (comprobarExiste(f1) && comprobarExiste(f2) && comprobarExiste(d)) {
            bCopiar.setEnabled(true);
            bComprobar.setEnabled(false);
            tFile1.setEnabled(false);
            tFile2.setEnabled(false);
            tDirectorio.setEnabled(false);
        }
        
    }//GEN-LAST:event_bComprobarActionPerformed

    private void bCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCopiarActionPerformed
        copia = new File(d.getPath(), f1.getName()+'_'+f2.getName()+".txt");
        copiarArchivo(f1, copia);
        copiarArchivo(f2, copia);
        JOptionPane.showMessageDialog(this, "Unión realizada");
        reiniciarEstado();
    }//GEN-LAST:event_bCopiarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UnionFicheros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UnionFicheros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UnionFicheros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UnionFicheros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UnionFicheros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bBorrar;
    private javax.swing.JButton bComprobar;
    private javax.swing.JButton bCopiar;
    private javax.swing.JLabel lDirectorio;
    private javax.swing.JLabel lFile1;
    private javax.swing.JLabel lFile2;
    private javax.swing.JPanel pFondo;
    private javax.swing.JTextField tDirectorio;
    private javax.swing.JTextField tFile1;
    private javax.swing.JTextField tFile2;
    // End of variables declaration//GEN-END:variables
}
